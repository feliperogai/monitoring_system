{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Downloads\\\\monitoring_system\\\\frontend\\\\src\\\\components\\\\Tickets.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tickets = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [statusOptions, setStatusOptions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [statusId, setStatusId] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      navigate('/login');\n    } else {\n      // Carregar os tickets do usuário\n      axios.get('http://localhost:5000/api/tickets', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setTickets(response.data);\n        setLoading(false);\n      }).catch(error => {\n        setError('Erro ao carregar os tickets');\n        setLoading(false);\n      });\n\n      // Carregar as opções de status de recarga\n      axios.get('http://localhost:5000/api/status').then(response => {\n        setStatusOptions(response.data);\n      }).catch(error => {\n        setError('Erro ao carregar os status de recarga');\n      });\n    }\n  }, [navigate]);\n  const handleCreateTicket = () => {\n    const token = localStorage.getItem('authToken');\n    if (!statusId) {\n      setError('Selecione um status para o ticket');\n      return;\n    }\n\n    // Enviar requisição para criar um novo ticket\n    axios.post('http://localhost:5000/api/tickets', {\n      statusId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setTickets([...tickets, response.data]); // Adiciona o novo ticket à lista\n      setStatusId(''); // Limpa o campo de status\n    }).catch(error => {\n      setError('Erro ao criar o ticket');\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Criar Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: statusId,\n        onChange: e => setStatusId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione o Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), statusOptions.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status.id,\n          children: status.nome\n        }, status.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateTicket,\n        children: \"Criar Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tickets.map(ticket => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Ticket ID: \", ticket.id, \" - Status ID: \", ticket.status_id]\n      }, ticket.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Tickets, \"p6ny3H2k38SSd9r7RrDBmNzXDgE=\", false, function () {\n  return [useNavigate];\n});\n_c = Tickets;\nexport default Tickets;\nvar _c;\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Tickets","_s","tickets","setTickets","statusOptions","setStatusOptions","loading","setLoading","error","setError","statusId","setStatusId","navigate","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","handleCreateTicket","post","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","status","id","nome","onClick","ticket","status_id","_c","$RefreshReg$"],"sources":["C:/Users/Felipe/Downloads/monitoring_system/frontend/src/components/Tickets.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Tickets = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [statusOptions, setStatusOptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [statusId, setStatusId] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (!token) {\r\n      navigate('/login');\r\n    } else {\r\n      // Carregar os tickets do usuário\r\n      axios\r\n        .get('http://localhost:5000/api/tickets', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((response) => {\r\n          setTickets(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setError('Erro ao carregar os tickets');\r\n          setLoading(false);\r\n        });\r\n\r\n      // Carregar as opções de status de recarga\r\n      axios\r\n        .get('http://localhost:5000/api/status')\r\n        .then((response) => {\r\n          setStatusOptions(response.data);\r\n        })\r\n        .catch((error) => {\r\n          setError('Erro ao carregar os status de recarga');\r\n        });\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleCreateTicket = () => {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    if (!statusId) {\r\n      setError('Selecione um status para o ticket');\r\n      return;\r\n    }\r\n\r\n    // Enviar requisição para criar um novo ticket\r\n    axios\r\n      .post(\r\n        'http://localhost:5000/api/tickets',\r\n        { statusId },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setTickets([...tickets, response.data]); // Adiciona o novo ticket à lista\r\n        setStatusId(''); // Limpa o campo de status\r\n      })\r\n      .catch((error) => {\r\n        setError('Erro ao criar o ticket');\r\n      });\r\n  };\r\n\r\n  if (loading) return <div>Carregando...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tickets</h1>\r\n      <div>\r\n        <h3>Criar Ticket</h3>\r\n        <select\r\n          value={statusId}\r\n          onChange={(e) => setStatusId(e.target.value)}\r\n        >\r\n          <option value=\"\">Selecione o Status</option>\r\n          {statusOptions.map((status) => (\r\n            <option key={status.id} value={status.id}>\r\n              {status.nome}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleCreateTicket}>Criar Ticket</button>\r\n      </div>\r\n      <ul>\r\n        {tickets.map((ticket) => (\r\n          <li key={ticket.id}>\r\n            Ticket ID: {ticket.id} - Status ID: {ticket.status_id}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tickets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}