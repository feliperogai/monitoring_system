{"ast":null,"code":"import axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Para redirecionar em caso de erro de autenticação\n\n// Criando a instância da API com a URL base\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// Adicionando o token JWT em todas as requisições (se houver)\napi.interceptors.request.use(config => {\n  // Obtém o token do localStorage (ou de onde estiver armazenado)\n  const token = localStorage.getItem('token');\n\n  // Se houver um token, adiciona o header Authorization nas requisições\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Adicionando um interceptor de resposta para lidar com erros globais\napi.interceptors.response.use(response => {\n  // Apenas retorna a resposta se a requisição foi bem-sucedida\n  return response;\n}, error => {\n  // Verifica se o erro é de autenticação (status 401)\n  if (error.response && error.response.status === 401) {\n    // Se o token for inválido ou expirado, redireciona para a página de login\n    console.error('Token expirado ou inválido. Redirecionando para login...');\n    localStorage.removeItem('token'); // Remove o token do localStorage\n    localStorage.removeItem('user'); // Remove os dados do usuário\n    window.location.href = '/login'; // Redireciona para a página de login\n  }\n\n  // Se não for erro de autenticação, apenas rejeita o erro\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","useNavigate","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","console","removeItem","window","location","href"],"sources":["C:/Users/Felipe/Downloads/monitoring_system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Para redirecionar em caso de erro de autenticação\r\n\r\n// Criando a instância da API com a URL base\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n});\r\n\r\n// Adicionando o token JWT em todas as requisições (se houver)\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Obtém o token do localStorage (ou de onde estiver armazenado)\r\n    const token = localStorage.getItem('token');\r\n    \r\n    // Se houver um token, adiciona o header Authorization nas requisições\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Adicionando um interceptor de resposta para lidar com erros globais\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Apenas retorna a resposta se a requisição foi bem-sucedida\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Verifica se o erro é de autenticação (status 401)\r\n    if (error.response && error.response.status === 401) {\r\n      // Se o token for inválido ou expirado, redireciona para a página de login\r\n      console.error('Token expirado ou inválido. Redirecionando para login...');\r\n      localStorage.removeItem('token'); // Remove o token do localStorage\r\n      localStorage.removeItem('user');  // Remove os dados do usuário\r\n      window.location.href = '/login';  // Redireciona para a página de login\r\n    }\r\n\r\n    // Se não for erro de autenticação, apenas rejeita o erro\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EACrD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACAC,OAAO,CAACL,KAAK,CAAC,0DAA0D,CAAC;IACzEH,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CAAC,CAAE;IAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAE;EACpC;;EAEA;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}