{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Downloads\\\\monitoring_system\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Usando useNavigate\nimport { Link } from 'react-router-dom'; // Adicionando a importação do Link\nimport styled from 'styled-components';\nimport axios from 'axios'; // Para fazer a requisição HTTP\n\n// Componente estilizado para o container\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = styled.div`\n  background-color: #333;\n  padding: 30px;\n  border-radius: 12px;\n  width: 100%;\n  max-width: 400px;\n  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);\n  text-align: center;\n  backdrop-filter: blur(10px); /* Efeito de desfoque */\n  margin: auto;\n`;\n\n// Componente estilizado para o título\n_c = LoginContainer;\nconst Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 2rem;\n  font-weight: 600;\n  color: #fff;\n`;\n\n// Componente para o logo\n_c2 = Title;\nconst Logo = styled.img`\n  height: 100px;\n  margin-bottom: 20px;\n`;\n\n// Componente estilizado para o input\n_c3 = Logo;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px;\n  margin: 10px 0;\n  border: 2px solid #fff;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  font-size: 1rem;\n  outline: none;\n  transition: border 0.3s ease;\n\n  &:focus {\n    border-color: #ff4081; /* Rosa claro ao focar no campo */\n  }\n`;\n\n// Componente estilizado para o botão de login\n_c4 = Input;\nconst LoginButton = styled.button`\n  width: 100%;\n  padding: 12px;\n  background-color: #ff4081; /* Rosa claro */\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f50057; /* Rosa mais escuro no hover */\n  }\n`;\n\n// Componente estilizado para a mensagem de link de registro\n_c5 = LoginButton;\nconst RegisterLink = styled.div`\n  margin-top: 10px;\n  color: #ff4081;\n\n  a {\n    color: #ff4081;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n// Estilo para a mensagem de erro\n_c6 = RegisterLink;\nconst ErrorMessage = styled.p`\n  color: red;\n  font-size: 1rem;\n  margin-top: 10px;\n`;\n_c7 = ErrorMessage;\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false); // Adicionado para controle de carregamento\n  const navigate = useNavigate(); // Usando useNavigate para redirecionamento\n\n  // Função para validar o formulário antes de enviar a requisição\n  const validateForm = () => {\n    if (!email || !senha) {\n      setError('Por favor, preencha todos os campos');\n      return false;\n    }\n    return true;\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Limpa erro anterior ao tentar fazer login novamente\n    setError('');\n\n    // Valida a entrada do formulário antes de fazer a requisição\n    if (!validateForm()) return;\n    setLoading(true); // Ativa o carregamento\n\n    try {\n      // Requisição POST para o backend\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        senha\n      });\n\n      // Verificando a resposta do backend\n      console.log(response.status);\n      if (response.status === 200) {\n        // Armazena o token no localStorage\n        localStorage.setItem('authToken', response.data.token);\n\n        // Redireciona para a página de Tickets\n        navigate('/tickets'); // Usando navigate para redirecionar\n      }\n    } catch (error) {\n      setLoading(false); // Desativa o carregamento\n      // Verificando e exibindo detalhes do erro\n      console.error(\"Erro de login: \", error.response || error); // Exibe mais informações sobre o erro no console\n\n      if (error.response) {\n        // Exibe a resposta completa do erro, se houver\n        setError(error.response.data.message || 'Erro no login');\n      } else {\n        setError('Erro de servidor, tente novamente mais tarde');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      src: \"https://c5gwmsmjx1.execute-api.us-east-1.amazonaws.com/prod/dados_processo_seletivo/logo_empresa/124918/logo-420x100px.png_name_20221121-18288-5b9rii.png\",\n      alt: \"Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"email\" // Associando o campo ao label\n          ,\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senha\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"senha\" // Associando o campo ao label\n          ,\n          type: \"password\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(LoginButton, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterLink, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"N\\xE3o tem uma conta? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Cadastre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vSTq7mvm6B74nLtvPoKeonaO9iY=\", false, function () {\n  return [useNavigate];\n});\n_c8 = Login;\nexport default Login;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"LoginContainer\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Logo\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"LoginButton\");\n$RefreshReg$(_c6, \"RegisterLink\");\n$RefreshReg$(_c7, \"ErrorMessage\");\n$RefreshReg$(_c8, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","styled","axios","jsxDEV","_jsxDEV","LoginContainer","div","_c","Title","h2","_c2","Logo","img","_c3","Input","input","_c4","LoginButton","button","_c5","RegisterLink","_c6","ErrorMessage","p","_c7","Login","_s","email","setEmail","senha","setSenha","error","setError","loading","setLoading","navigate","validateForm","handleLogin","e","preventDefault","response","post","console","log","status","localStorage","setItem","data","token","message","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","value","onChange","target","required","to","_c8","$RefreshReg$"],"sources":["C:/Users/Felipe/Downloads/monitoring_system/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Usando useNavigate\r\nimport { Link } from 'react-router-dom'; // Adicionando a importação do Link\r\nimport styled from 'styled-components';\r\nimport axios from 'axios'; // Para fazer a requisição HTTP\r\n\r\n// Componente estilizado para o container\r\nconst LoginContainer = styled.div`\r\n  background-color: #333;\r\n  padding: 30px;\r\n  border-radius: 12px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);\r\n  text-align: center;\r\n  backdrop-filter: blur(10px); /* Efeito de desfoque */\r\n  margin: auto;\r\n`;\r\n\r\n// Componente estilizado para o título\r\nconst Title = styled.h2`\r\n  margin-bottom: 20px;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: #fff;\r\n`;\r\n\r\n// Componente para o logo\r\nconst Logo = styled.img`\r\n  height: 100px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\n// Componente estilizado para o input\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  margin: 10px 0;\r\n  border: 2px solid #fff;\r\n  border-radius: 5px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: #fff;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  transition: border 0.3s ease;\r\n\r\n  &:focus {\r\n    border-color: #ff4081; /* Rosa claro ao focar no campo */\r\n  }\r\n`;\r\n\r\n// Componente estilizado para o botão de login\r\nconst LoginButton = styled.button`\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #ff4081; /* Rosa claro */\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #f50057; /* Rosa mais escuro no hover */\r\n  }\r\n`;\r\n\r\n// Componente estilizado para a mensagem de link de registro\r\nconst RegisterLink = styled.div`\r\n  margin-top: 10px;\r\n  color: #ff4081;\r\n\r\n  a {\r\n    color: #ff4081;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\n// Estilo para a mensagem de erro\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 1rem;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false); // Adicionado para controle de carregamento\r\n  const navigate = useNavigate(); // Usando useNavigate para redirecionamento\r\n\r\n  // Função para validar o formulário antes de enviar a requisição\r\n  const validateForm = () => {\r\n    if (!email || !senha) {\r\n      setError('Por favor, preencha todos os campos');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Limpa erro anterior ao tentar fazer login novamente\r\n    setError('');\r\n\r\n    // Valida a entrada do formulário antes de fazer a requisição\r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true); // Ativa o carregamento\r\n\r\n    try {\r\n      // Requisição POST para o backend\r\n      const response = await axios.post('http://localhost:5000/api/login', { email, senha });\r\n\r\n      // Verificando a resposta do backend\r\n      console.log(response.status)\r\n      if (response.status === 200) {\r\n        // Armazena o token no localStorage\r\n        localStorage.setItem('authToken', response.data.token);\r\n        \r\n        // Redireciona para a página de Tickets\r\n        navigate('/tickets'); // Usando navigate para redirecionar\r\n      }\r\n    } catch (error) {\r\n      setLoading(false); // Desativa o carregamento\r\n      // Verificando e exibindo detalhes do erro\r\n      console.error(\"Erro de login: \", error.response || error); // Exibe mais informações sobre o erro no console\r\n\r\n      if (error.response) {\r\n        // Exibe a resposta completa do erro, se houver\r\n        setError(error.response.data.message || 'Erro no login');\r\n      } else {\r\n        setError('Erro de servidor, tente novamente mais tarde');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginContainer>\r\n      {/* Logo da empresa */}\r\n      <Logo src=\"https://c5gwmsmjx1.execute-api.us-east-1.amazonaws.com/prod/dados_processo_seletivo/logo_empresa/124918/logo-420x100px.png_name_20221121-18288-5b9rii.png\" alt=\"Logo\" />\r\n      <Title>Login</Title>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Input \r\n            id=\"email\" // Associando o campo ao label\r\n            type=\"email\" \r\n            value={email} \r\n            onChange={(e) => setEmail(e.target.value)} \r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"senha\">Senha</label>\r\n          <Input \r\n            id=\"senha\" // Associando o campo ao label\r\n            type=\"password\" \r\n            value={senha} \r\n            onChange={(e) => setSenha(e.target.value)} \r\n            required\r\n          />\r\n        </div>\r\n        {error && <ErrorMessage>{error}</ErrorMessage>} {/* Exibe mensagem de erro */}\r\n        <LoginButton type=\"submit\">Login</LoginButton>\r\n      </form>\r\n\r\n      {/* Link para a página de cadastro */}\r\n      <RegisterLink>\r\n        <p>Não tem uma conta? <Link to=\"/register\">Cadastre-se</Link></p>\r\n      </RegisterLink>\r\n    </LoginContainer>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}